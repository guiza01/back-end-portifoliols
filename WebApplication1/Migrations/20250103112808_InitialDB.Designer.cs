// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using WebApplication1.Data;

#nullable disable

namespace WebApplication1.Migrations
{
    [DbContext(typeof(ProjectPortfolioDBContext))]
    [Migration("20250103112808_InitialDB")]
    partial class InitialDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("WebApplication1.Models.LanguageModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("WebApplication1.Models.LanguageProjectModels", b =>
                {
                    b.Property<int>("LanguageId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("LanguageId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("LanguageProjects");
                });

            modelBuilder.Entity("WebApplication1.Models.PlatformModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Platforms");
                });

            modelBuilder.Entity("WebApplication1.Models.PlatformProjectModels", b =>
                {
                    b.Property<int>("PlatformId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("PlatformId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("PlatformProjects");
                });

            modelBuilder.Entity("WebApplication1.Models.ProjectModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)");

                    b.Property<string>("Link")
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("WebApplication1.Models.SegmentModels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.HasKey("Id");

                    b.ToTable("Segments");
                });

            modelBuilder.Entity("WebApplication1.Models.SegmentProjectModels", b =>
                {
                    b.Property<int>("SegmentId")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId")
                        .HasColumnType("integer");

                    b.Property<int>("Id")
                        .HasColumnType("integer");

                    b.HasKey("SegmentId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("SegmentProjects");
                });

            modelBuilder.Entity("WebApplication1.Models.LanguageProjectModels", b =>
                {
                    b.HasOne("WebApplication1.Models.LanguageModels", "Language")
                        .WithMany("LanguageProjects")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.ProjectModels", "Project")
                        .WithMany("LanguageProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Language");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebApplication1.Models.PlatformProjectModels", b =>
                {
                    b.HasOne("WebApplication1.Models.PlatformModels", "Platform")
                        .WithMany("PlatformProjects")
                        .HasForeignKey("PlatformId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.ProjectModels", "Project")
                        .WithMany("PlatformProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Platform");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("WebApplication1.Models.SegmentProjectModels", b =>
                {
                    b.HasOne("WebApplication1.Models.ProjectModels", "Project")
                        .WithMany("SegmentProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebApplication1.Models.SegmentModels", "Segment")
                        .WithMany("SegmentProjects")
                        .HasForeignKey("SegmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("WebApplication1.Models.LanguageModels", b =>
                {
                    b.Navigation("LanguageProjects");
                });

            modelBuilder.Entity("WebApplication1.Models.PlatformModels", b =>
                {
                    b.Navigation("PlatformProjects");
                });

            modelBuilder.Entity("WebApplication1.Models.ProjectModels", b =>
                {
                    b.Navigation("LanguageProjects");

                    b.Navigation("PlatformProjects");

                    b.Navigation("SegmentProjects");
                });

            modelBuilder.Entity("WebApplication1.Models.SegmentModels", b =>
                {
                    b.Navigation("SegmentProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
